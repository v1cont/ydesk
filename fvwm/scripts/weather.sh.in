#! /bin/bash
# Weather applet engine

TEXTDOMAIN=@GETTEXT_PACKAGE@
TEXTDOMAINDIR=@prefix@/share/locale

wfile=${XDG_CACHE_HOME:-$HOME/.cache}/ydesk/weather.json

declare -A icons=([01d]=weather-clear [01n]=weather-clear-night [02d]=weather-few-clouds [02n]=weather-few-clouds-night
                  [03d]=weather-overcast [03n]=weather-overcast [04d]=weather-severe-alert [04n]=weather-severe-alert
                  [09d]=weather-showers [09n]=weather-showers [10d]=weather-showers-scattered [10n]=weather-showers-scattered
                  [11d]=weather-storm [11n]=weather-storm [13d]=weather-snow [13n]=weather-snow [50d]=weather-fog [50n]=weather-fog)

function wthr_forecast {
    xdg-open "https://openweathermap.org/"
}
export -f wthr_forecast

function wthr_update {
    APIKEY=$(< ${XDG_DATA_HOME:-$HOME/.share}/ydesk/weather.key)
    if [[ -z $APIKEY ]]; then
        echo "API key missing" > /dev/stderr
        exit 1
    fi
    eval CITY=$(gsettings get ydesk.weather city)
    eval COUNTRY=$(gsettings get ydesk.weather country)
    eval UNITS=$(gsettings get ydesk.weather units)
    LNG=${LANG%_*}

    mkdir -p $(dirname $wfile)
    curl -s -o $wfile "http://api.openweathermap.org/data/2.5/weather?q=${CITY},${COUNTRY}&APPID=${APIKEY}&units=${UNITS}&lang=${LNG:-en}"

    printf -v temp "%.f°C" $(jq '.main.temp' $wfile)
    eval i=$(jq '.weather[0].icon' $wfile)

    isize=$(gsettings get ydesk.panel isize)
    if [[ $1 == -f ]]; then
        FvwmCommand "SendToModule FvwmPanel Silent ChangeButton wthr Title '$temp', Icon '$(yad-tools --icon --size=$isize ${icons[$i]})'"
    else
        echo "SendToModule FvwmPanel Silent ChangeButton wthr Title '$temp', Icon '$(yad-tools --icon --size=$isize ${icons[$i]})'"
    fi
}

function wthr_show {
    wthr_update -f

    printf -v temp "%.f°C" "$(jq '.main.temp' $wfile)"
    printf -v fl_temp "%.f°C" "$(jq '.main.feels_like' $wfile)"
    eval i=$(jq '.weather[0].icon' $wfile)
    eval state=$(jq '.weather[0].description' $wfile)
    eval city=$(jq '.name' $wfile)
    eval wspeed=$(jq '.wind.speed' $wfile)
    eval wdeg=$(jq '.wind.deg' $wfile)

    if [[ $wdeg -ge 349 || $wdeg -le 11 ]]; then
        wdir="N"
        warrow='↓'
    elif [[ $wdeg -le 79 ]]; then
        wdir="NE"
        warrow='↙'
    elif [[ $wdeg -le 124 ]]; then
        wdir="E"
        warrow='←'
    elif [[ $wdeg -le 169 ]]; then
        wdir="SE"
        warrow='↖'
    elif [[ $wdeg -le 214 ]]; then
        wdir="S"
        warrow='↑'
    elif [[ $wdeg -le 259 ]]; then
        wdir="SW"
        warrow='↗'
    elif [[ $wdeg -le 304 ]]; then
        wdir="W"
        warrow='→'
    else
        wdir="NW"
        warrow='↘'
    fi

    TEXT=$"Weather in <b>$city</b>\n\n$temp (<i>feels like</i> $fl_temp), $state\n\nWind: $wspeed m/s ($wdir $warrow)"

    yad --title=$"Weather" --window-icon=sunny --width=300 --height=150 \
        --posx=-100 --posy=50 --borders=10 --image=${icons[$i]} --text="$TEXT" \
        --button=$"Forecast!web-browser:bash -c wthr_forecast" --button=yad-close
}

case $1 in
    update|upd) ( wthr_update ) & ;;
    force) wthr_update -f ;;
    show) wthr_show ;;
esac
